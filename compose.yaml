version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ptu-server
    ports:
      - '3000:3000'
      - '3001:3001'
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_NAME: ptu_learning
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ELASTICSEARCH_NODE: http://elasticsearch:9200
      LOGSTASH_HOST: logstash
      LOGSTASH_PORT: 5000
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      logstash:
        condition: service_started
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: pnpm start:prod
    networks:
      - elk

  db:
    image: postgres:15
    container_name: ptu-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ptu_learning
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - elk

  redis:
    image: redis:7
    container_name: ptu-redis
    ports:
      - '6379:6379'
    networks:
      - elk

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: ptu-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - '9200:9200'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -fs http://localhost:9200/_cluster/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.0
    container_name: logstash
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '5044:5044'
      - '5000:5000'
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - '5601:5601'
    networks:
      - elk

  nginx:
    image: nginx:latest
    container_name: ptu_nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - server
    networks:
      - elk

volumes:
  pgdata:
  esdata:

networks:
  elk:
    driver: bridge
